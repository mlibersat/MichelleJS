Needed for Zoom Buttons & relatedAltText/keyboard functionality of
// example applet https://www.geogebra.org/m/fese2hqw
//
//
////////////////////////////////////// ZOOM BUTTONS //////////////////////////////////////////////////////
//
//

enableHome = false

// If necessary, use this to limit zooming in beyond -1 to 1. Or, customize based on the needs of the applet.
enableZoomIn = x(corner1) <= -2

// Insert zoom button SVGs
// Note add to tab order: picDefZoomOut, picDefZoomIn, picDefZoomInDisab, picDefHome, picDefHomeDisab


// Global JS - See this example applet for keyboard Instructions, and click function:
////////// Global JS client, click, and keyit functions for use with off screen points. 
// See example here:
    C:\Users\MichelleLibersat\JavaScript\DIDwhiteboard\IM1\M2\TA L01 - Solution Sets of Linear Equations in Two Variables\03 - GlobalJS.js

/////////////////////////// If Black Focus Indicators are needed ///////////////
focusGap=5xpixel 
zoomHomeSelected=false
zoomInSelected=false
zoomOutSelected=false
// set these in coding layer select/deselect

focusZoomHome = Polygon({Corner(picDefHome, 1) + (-focusGap, -focusGap), Corner(picDefHome, 2) + (focusGap, -focusGap), Corner(picDefHome, 3) + (focusGap, focusGap), Corner(picDefHome, 4) + (-focusGap, focusGap)})

SetFixed(focusZoomHome, true, false)
SetColor(focusZoomHome, 0, 0, 0)
SetFilling(focusZoomHome, 0)
SetLineThickness(focusZoomHome, 8)
SetLayer(focusZoomHome, 8)
SetConditionToShowObject(focusZoomHome, zoomHomeSelected)

/////////////
// set these in coding layer select/deselect

focusZoomIn = Polygon({Corner(picDefZoomIn, 1) + (-focusGap, -focusGap), Corner(picDefZoomIn, 2) + (focusGap, -focusGap), Corner(picDefZoomIn, 3) + (focusGap, focusGap), Corner(picDefZoomIn, 4) + (-focusGap, focusGap)})

SetFixed(focusZoomIn, true, false)
SetColor(focusZoomIn, 0, 0, 0)
SetFilling(focusZoomIn, 0)
SetLineThickness(focusZoomIn, 8)
SetLayer(focusZoomIn, 8)
SetConditionToShowObject(focusZoomIn, zoomInSelected)

/////////////
// set these in coding layer select/deselect

focusZoomOut = Polygon({Corner(picDefZoomOut, 1) + (-focusGap, -focusGap), Corner(picDefZoomOut, 2) + (focusGap, -focusGap), Corner(picDefZoomOut, 3) + (focusGap, focusGap), Corner(picDefZoomOut, 4) + (-focusGap, focusGap)})

SetFixed(focusZoomOut, true, false)
SetColor(focusZoomOut, 0, 0, 0)
SetFilling(focusZoomOut, 0)
SetLineThickness(focusZoomOut, 8)
SetLayer(focusZoomOut, 8)
SetConditionToShowObject(focusZoomOut, zoomOutSelected)


//
//
////////////////////////////////// OFF SCREEN INDICATORS ///////////////////////////////////////////////
//
//

// Different right gap needed so dragged points do not overlap with button bar
rightGap = 25xpixel

maxXStage = x(corner3) - rightGap
maxYStage = y(corner3) - buttonBarHeight
minXStage = x(corner1)
minYStage = y(corner1)

maxXPoint = floor(x(corner3) - rightGap - 30xpixel)
maxYPoint = floor(y(corner3) - buttonBarHeight - 30ypixel)
minXPoint = ceil(x(corner1) + 20xpixel)
minYPoint = ceil(y(corner1) + 20ypixel)


// If there are more points, offset their off-screen indicators by creating gap values for each point (ex: gapXB = 45xpixel)
gapXA = 30xpixel
gapYA = 30ypixel

screenPolyYMax = y(corner4) - buttonBarHeight
screenPoly = Polygon({corner1, corner2, corner3 + (0, -buttonBarHeight), (x(corner4), screenPolyYMax)})

AInScreenPoly = IsInRegion(A, screenPoly)

// If other points, use similar but change out gap names
// Segments are automatically created. We will use these to place our off screen indicator points.
innerAPolyDONTEDIT = Polygon((minXStage, minYStage) + (gapXA, gapYA), (maxXStage, minYStage) + (-gapXA, gapYA), (maxXStage, maxYStage) + (-gapXA, -gapYA), (minXStage, maxYStage) + (gapXA, -gapYA))

// For point A
// example created segment from innerAPoly
a = Segment((minXStage, minYStage) + (gapXA, gapYA), (maxXStage, minYStage) + (-gapXA, gapYA), innerAPolyDONTEDIT)

OffScreenABottom = If(IsDefined(ClosestPoint(a, A)), ClosestPoint(a, A), (0, 0))


////////// Global JS client, click, and keyit functions for use with off screen points. 
// See example here:
    C:\Users\MichelleLibersat\JavaScript\DIDwhiteboard\IM1\M2\TA L01 - Solution Sets of Linear Equations in Two Variables\03 - GlobalJS.js