//step 1: copy/paste code below into input bar of GGB to create initial set of GGB objects
Execute({  "xpixel=(x(Corner(3)) - x(Corner(1))) / x(Corner(5)) ",  "circlePointList={}  ",  "circlePathList={}  ",  "guideRadius=10xpixel "})

//step 2: populate the circlePathList and circlePointList that have been created with the names of each point and conic (no "")

//step 3: copy/paste code below into input bar of GGB to create triangles. This creates a list of text objects
rightArrowList=Sequence("rightGuideArrow"+i+"=Polygon({   Dilate(Rotate("+Element(circlePointList,i)+",90deg, Intersect( (x-x("+Element(circlePointList,i)+"))^2 +(y-y("+Element(circlePointList,i)+"))^2=guideRadius^2, y-y("+Element(circlePointList,i)+")=-(x(Center("+Element(circlePathList,i)+"))-x("+Element(circlePointList,i)+"))/(y(Center("+Element(circlePathList,i)+"))-y("+Element(circlePointList,i)+"))(x-x("+Element(circlePointList,i)+")),2)), sqrt(3)/3, Intersect( (x-x("+Element(circlePointList,i)+"))^2 +(y-y("+Element(circlePointList,i)+"))^2=guideRadius^2, y-y("+Element(circlePointList,i)+")=-(x(Center("+Element(circlePathList,i)+"))-x("+Element(circlePointList,i)+"))/(y(Center("+Element(circlePathList,i)+"))-y("+Element(circlePointList,i)+"))(x-x("+Element(circlePointList,i)+")),2)),   Dilate(Rotate("+Element(circlePointList,i)+",270deg, Intersect( (x-x("+Element(circlePointList,i)+"))^2 +(y-y("+Element(circlePointList,i)+"))^2=guideRadius^2, y-y("+Element(circlePointList,i)+")=-(x(Center("+Element(circlePathList,i)+"))-x("+Element(circlePointList,i)+"))/(y(Center("+Element(circlePathList,i)+"))-y("+Element(circlePointList,i)+"))(x-x("+Element(circlePointList,i)+")),2)),sqrt(3)/3, Intersect( (x-x("+Element(circlePointList,i)+"))^2 +(y-y("+Element(circlePointList,i)+"))^2=guideRadius^2, y-y("+Element(circlePointList,i)+")=-(x(Center("+Element(circlePathList,i)+"))-x("+Element(circlePointList,i)+"))/(y(Center("+Element(circlePathList,i)+"))-y("+Element(circlePointList,i)+"))(x-x("+Element(circlePointList,i)+")),2)),   Reflect("+Element(circlePointList,i)+", Intersect( (x-x("+Element(circlePointList,i)+"))^2 +(y-y("+Element(circlePointList,i)+"))^2=guideRadius^2, y-y("+Element(circlePointList,i)+")=-(x(Center("+Element(circlePathList,i)+"))-x("+Element(circlePointList,i)+"))/(y(Center("+Element(circlePathList,i)+"))-y("+Element(circlePointList,i)+"))(x-x("+Element(circlePointList,i)+")),2))   })", i,1,Length(circlePointList))

leftArrowList=Sequence("leftGuideArrow"+i+"=Polygon({   Dilate(Rotate("+Element(circlePointList,i)+",90deg, Intersect( (x-x("+Element(circlePointList,i)+"))^2 +(y-y("+Element(circlePointList,i)+"))^2=guideRadius^2, y-y("+Element(circlePointList,i)+")=-(x(Center("+Element(circlePathList,i)+"))-x("+Element(circlePointList,i)+"))/(y(Center("+Element(circlePathList,i)+"))-y("+Element(circlePointList,i)+"))(x-x("+Element(circlePointList,i)+")),1)), sqrt(3)/3, Intersect( (x-x("+Element(circlePointList,i)+"))^2 +(y-y("+Element(circlePointList,i)+"))^2=guideRadius^2, y-y("+Element(circlePointList,i)+")=-(x(Center("+Element(circlePathList,i)+"))-x("+Element(circlePointList,i)+"))/(y(Center("+Element(circlePathList,i)+"))-y("+Element(circlePointList,i)+"))(x-x("+Element(circlePointList,i)+")),1)),   Dilate(Rotate("+Element(circlePointList,i)+",270deg, Intersect( (x-x("+Element(circlePointList,i)+"))^2 +(y-y("+Element(circlePointList,i)+"))^2=guideRadius^2, y-y("+Element(circlePointList,i)+")=-(x(Center("+Element(circlePathList,i)+"))-x("+Element(circlePointList,i)+"))/(y(Center("+Element(circlePathList,i)+"))-y("+Element(circlePointList,i)+"))(x-x("+Element(circlePointList,i)+")),1)),sqrt(3)/3, Intersect( (x-x("+Element(circlePointList,i)+"))^2 +(y-y("+Element(circlePointList,i)+"))^2=guideRadius^2, y-y("+Element(circlePointList,i)+")=-(x(Center("+Element(circlePathList,i)+"))-x("+Element(circlePointList,i)+"))/(y(Center("+Element(circlePathList,i)+"))-y("+Element(circlePointList,i)+"))(x-x("+Element(circlePointList,i)+")),1)),   Reflect("+Element(circlePointList,i)+", Intersect( (x-x("+Element(circlePointList,i)+"))^2 +(y-y("+Element(circlePointList,i)+"))^2=guideRadius^2, y-y("+Element(circlePointList,i)+")=-(x(Center("+Element(circlePathList,i)+"))-x("+Element(circlePointList,i)+"))/(y(Center("+Element(circlePathList,i)+"))-y("+Element(circlePointList,i)+"))(x-x("+Element(circlePointList,i)+")),1))   })", i,1,Length(circlePointList))

//this part needs work to code
// formattingList=Sequence( "ShowLabel(rightGuideArrow"+i+", false)",  "ShowLabel(leftGuideArrow"+i+", false)",  "SetColor(rightGuideArrow"+i+", 0,0,0) ",  "SetColor(leftGuideArrow"+i+", 0,0,0) ",  "SetFilling(rightGuideArrow"+i+", 1) ",  "SetFilling(leftGuideArrow"+i+", 1) "  }),i,1,Length(circlePointList))

 //step 4: copy/paste the following into GGB input bar
 //Note, there will be a syntax error pop-up... this is fine... everything is fine. 
 Execute({rightArrowList})
 Execute({leftArrowList})
 Execute({formattingList})

 //step5: Optional: delete the 3 lists that were made. You have your arrows and no longer need the lists.

